.header {
  height: 80vh;
  background-image: linear-gradient(
      to right bottom,
      rgba($color-primary-light, 0.8),
      rgba($color-primary-dark, 0.8)
    ),
    url('../img/hero-small.jpg');
  background-size: cover;
  background-position: top;
  position: relative;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);

  // does not matter values for check in clip-path as we are just checking
  // for support
  @support(clip-path(0 0) or (-webkit-clip-path: polygon(0 0))){
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
    height: 95vh;
  }

  // media query that targets device resolution
  // 192dpi because thats the resolution of apple retina screen
  // it is usually used as a reference point
  // 37.5em/600px because it does not make sense to have high res below this
  // ',' means or
  // for extremely large screens (125em/2000px) makes sense to have high res image
  @media (min-resolution: 192dpi) and (min-width: 37.5em), 
  (-webkit-min-device-pixel-ratio: 2) and (min-width: 37.5em),
  (min-width: 125em) {
    background-image: linear-gradient(
        to right bottom,
        rgba($color-primary-light, 0.8),
        rgba($color-primary-dark, 0.8)
      ),
      url('../img/hero.jpg'); // high res image
  }

  // clip path adjusted to look better for mobile devices
  @include respond(phone) {
    -webkit-clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
    clip-path: polygon(0 0, 100% 0, 100% 85vh, 0 100%);
  }

  &__logo-box {
    position: absolute;
    top: 40px;
    left: 40px;
  }

  &__logo {
    height: 35px; /* stick to heights when scaling */
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    /* transform: no longer in relation to parent element but 
        just the position of the element itself. Good for repositioning
        elements. */
    transform: translate(-50%, -50%);
    text-align: center;
  }
}
