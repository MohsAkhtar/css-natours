.popup {
  width: 100%;
  height: 100vh;
  background-color: rgba($color-black, 0.8);
  position: fixed;
  // remember to set 'top' and 'left' for positioning so it appears
  top: 0;
  left: 0;
  z-index: 3000;
  // set these properties to animate, cannot just do display: none; as we cannot animate it then
  opacity: 0; // opacity 0 so it won't appear on screen
  visibility: hidden; // visibility hidden so even when opacity is gone the links and elements are not accessible
  transition: all 0.3s;

  &__content {
    @include absoluteCenter;
    background-color: $color-white;
    width: 75%;
    box-shadow: 0 2rem 4rem rgba($color-black, 0.2);
    border-radius: $border-radius;
    display: table; // displaying as table to get two columns the same height automatically
    // so basicallyfaking saying it is a table
    overflow: hidden; // stop images overflowing
    // content hidden till popup is targetted
    opacity: 0;
    // need to repeat 'translate' as we can only have one 'transform' per element
    // if we just had scale it would overwrite the mixin 'translate'
    transform: translate(-50%, -50%) scale(0.25);
    transition: all 0.4s 0.2s; // 0.2s is a delay here so background appears first
  }

  // both left and right are table cell displayed to automatically give the same height to both
  &__left {
    width: 33.333333%;
    display: table-cell;
  }

  &__right {
    width: 66.666667%;
    display: table-cell;
    vertical-align: middle; // can use vertical-align as this is a table cell
    padding: 3rem 5rem;
  }

  &__img {
    display: block;
    width: 100%;
  }

  &__text {
    font-size: 1.4rem;
    margin-bottom: 4rem;
    // automatically create 2 columns for text
    column-count: 2;
    column-gap: 4rem; // gap between the two columns
    column-rule: 1px solid $color-grey-light-2; // adds a little border between columns
    -moz-hyphens: auto; // automatically adds hyphens to wrap text
    -ms-hyphens: auto;
    -webkit-hyphens: auto;
    hyphens: auto;
  }

  //pseudo class target activates when element has been targetted by anchor link
  &:target {
    opacity: 1;
    visibility: visible;
  }

  // to give animation when popup is targetted
  &:target &__content {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }

  // link to close popup and redirect back to tours
  &__close {
    &:link,
    &:visited {
      color: $color-grey-dark;
      position: absolute;
      top: 2.5rem;
      right: 2.5rem;
      font-size: 3rem;
      text-decoration: none;
      display: inline-block;
      transition: all 0.3s;
      line-height: 1; // as text has line height, change to 1 so it goes in correct position
    }

    &:hover {
      color: $color-primary;
    }
  }
}
